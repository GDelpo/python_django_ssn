# Generated by Django 5.1.7 on 2025-04-23 05:02

import django.core.validators
import django.db.models.deletion
import operaciones.helpers.file_utils
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BaseRequestModel",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "codigo_compania",
                    models.CharField(
                        help_text="Código identificador de la compañía (4 caracteres)",
                        max_length=4,
                        validators=[django.core.validators.MinLengthValidator(4)],
                    ),
                ),
                (
                    "tipo_entrega",
                    models.CharField(
                        choices=[("Semanal", "Semanal"), ("Mensual", "Mensual")],
                        help_text="Tipo de entrega (semanal o mensual)",
                        max_length=10,
                    ),
                ),
                (
                    "cronograma",
                    models.CharField(
                        help_text="Periodo del cronograma (YYYY-MM)",
                        max_length=7,
                        validators=[django.core.validators.MinLengthValidator(7)],
                    ),
                ),
                (
                    "operaciones",
                    models.JSONField(
                        default=list,
                        help_text="Lista con todas las operaciones en formato JSON",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("send_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Solicitud Base",
                "verbose_name_plural": "Solicitudes Base",
                "db_table": "db_solicitudes_base",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DetalleOperacionCanje",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_especie",
                    models.CharField(
                        choices=[
                            ("TP", "Títulos Públicos"),
                            ("ON", "Obligaciones Negociables"),
                            ("FC", "Fondos Comunes de Inversión"),
                            ("FF", "Fideicomisos Financieros"),
                            ("AC", "Acciones"),
                            ("OP", "Otras Inversiones"),
                        ],
                        help_text="Tipo de especie (2 caracteres)",
                        max_length=2,
                    ),
                ),
                (
                    "codigo_especie",
                    models.CharField(help_text="Código de la especie", max_length=20),
                ),
                (
                    "cant_especies",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Cantidad de especies (valor nominal): 14 enteros + 6 decimales para FCI, 14 enteros para otras inversiones",
                        max_digits=20,
                    ),
                ),
                (
                    "codigo_afectacion",
                    models.CharField(help_text="Código de afectación", max_length=3),
                ),
                (
                    "tipo_valuacion",
                    models.CharField(
                        choices=[("T", "Técnico"), ("V", "Mercado")],
                        help_text="Tipo de valuación (T -> Técnico | V -> Mercado)",
                        max_length=1,
                    ),
                ),
                (
                    "comprobante",
                    models.FileField(
                        blank=True,
                        help_text="Adjunta el comprobante (PDF, imagen, etc.)",
                        null=True,
                        upload_to=operaciones.helpers.file_utils.comprobante_upload_path,
                        validators=[
                            operaciones.helpers.file_utils.validate_comprobante_file
                        ],
                    ),
                ),
                (
                    "fecha_pase_vt",
                    models.DateField(help_text="Fecha de pase a venta (DDMMYYYY)"),
                ),
                (
                    "precio_pase_vt",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Precio de pase a venta",
                        max_digits=6,
                    ),
                ),
            ],
            options={
                "verbose_name": "Detalle base de operación",
                "verbose_name_plural": "Detalles base de operación",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CompraOperacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_operacion",
                    models.CharField(
                        choices=[
                            ("C", "Compra"),
                            ("V", "Venta"),
                            ("J", "Canje"),
                            ("P", "Plazo Fijo"),
                        ],
                        help_text="Tipo de operación a realizar",
                        max_length=1,
                    ),
                ),
                (
                    "fecha_movimiento",
                    models.DateField(help_text="Fecha de movimiento (DDMMYYYY)"),
                ),
                (
                    "fecha_liquidacion",
                    models.DateField(help_text="Fecha de liquidación (DDMMYYYY)"),
                ),
                (
                    "tipo_especie",
                    models.CharField(
                        choices=[
                            ("TP", "Títulos Públicos"),
                            ("ON", "Obligaciones Negociables"),
                            ("FC", "Fondos Comunes de Inversión"),
                            ("FF", "Fideicomisos Financieros"),
                            ("AC", "Acciones"),
                            ("OP", "Otras Inversiones"),
                        ],
                        help_text="Tipo de especie (2 caracteres)",
                        max_length=2,
                    ),
                ),
                (
                    "codigo_especie",
                    models.CharField(help_text="Código de la especie", max_length=20),
                ),
                (
                    "cant_especies",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Cantidad de especies (valor nominal): 14 enteros + 6 decimales para FCI, 14 enteros para otras inversiones",
                        max_digits=20,
                    ),
                ),
                (
                    "codigo_afectacion",
                    models.CharField(help_text="Código de afectación", max_length=3),
                ),
                (
                    "tipo_valuacion",
                    models.CharField(
                        choices=[("T", "Técnico"), ("V", "Mercado")],
                        help_text="Tipo de valuación (T -> Técnico | V -> Mercado)",
                        max_length=1,
                    ),
                ),
                (
                    "comprobante",
                    models.FileField(
                        blank=True,
                        help_text="Adjunta el comprobante (PDF, imagen, etc.)",
                        null=True,
                        upload_to=operaciones.helpers.file_utils.comprobante_upload_path,
                        validators=[
                            operaciones.helpers.file_utils.validate_comprobante_file
                        ],
                    ),
                ),
                (
                    "precio_compra",
                    models.DecimalField(
                        decimal_places=2, help_text="Precio de compra", max_digits=6
                    ),
                ),
                (
                    "solicitud",
                    models.ForeignKey(
                        blank=True,
                        help_text="Solicitud a la que pertenece esta compra",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="compras",
                        to="operaciones.baserequestmodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Compra",
                "verbose_name_plural": "Compras",
                "db_table": "db_compras_operacion",
            },
        ),
        migrations.CreateModel(
            name="CanjeOperacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_operacion",
                    models.CharField(
                        choices=[
                            ("C", "Compra"),
                            ("V", "Venta"),
                            ("J", "Canje"),
                            ("P", "Plazo Fijo"),
                        ],
                        help_text="Tipo de operación a realizar",
                        max_length=1,
                    ),
                ),
                (
                    "fecha_movimiento",
                    models.DateField(help_text="Fecha de movimiento (DDMMYYYY)"),
                ),
                (
                    "fecha_liquidacion",
                    models.DateField(help_text="Fecha de liquidación (DDMMYYYY)"),
                ),
                (
                    "solicitud",
                    models.ForeignKey(
                        blank=True,
                        help_text="Solicitud a la que pertenece este canje",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="canjes",
                        to="operaciones.baserequestmodel",
                    ),
                ),
                (
                    "detalle_a",
                    models.OneToOneField(
                        help_text="Datos de la operación A",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="canje_operacion_a",
                        to="operaciones.detalleoperacioncanje",
                    ),
                ),
                (
                    "detalle_b",
                    models.OneToOneField(
                        help_text="Datos de la operación B",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="canje_operacion_b",
                        to="operaciones.detalleoperacioncanje",
                    ),
                ),
            ],
            options={
                "verbose_name": "Canje",
                "verbose_name_plural": "Canjes",
                "db_table": "db_canjes_operacion",
            },
        ),
        migrations.CreateModel(
            name="PlazoFijoOperacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_operacion",
                    models.CharField(
                        choices=[
                            ("C", "Compra"),
                            ("V", "Venta"),
                            ("J", "Canje"),
                            ("P", "Plazo Fijo"),
                        ],
                        help_text="Tipo de operación: Plazo Fijo",
                        max_length=1,
                    ),
                ),
                (
                    "tipo_pf",
                    models.CharField(help_text="Tipo de plazo fijo", max_length=50),
                ),
                ("bic", models.CharField(help_text="Código BIC", max_length=50)),
                ("cdf", models.CharField(help_text="Código CDF", max_length=50)),
                (
                    "fecha_constitucion",
                    models.DateField(help_text="Fecha de constitución (DDMMYYYY)"),
                ),
                (
                    "fecha_vencimiento",
                    models.DateField(help_text="Fecha de vencimiento (DDMMYYYY)"),
                ),
                (
                    "moneda",
                    models.CharField(help_text="Código de moneda", max_length=3),
                ),
                (
                    "valor_nominal_origen",
                    models.FloatField(help_text="Valor nominal origen"),
                ),
                (
                    "valor_nominal_nacional",
                    models.FloatField(help_text="Valor nominal nacional"),
                ),
                (
                    "codigo_afectacion",
                    models.CharField(help_text="Código de afectación", max_length=3),
                ),
                (
                    "tipo_tasa",
                    models.CharField(help_text="Tipo de tasa", max_length=50),
                ),
                ("tasa", models.FloatField(help_text="Valor de la tasa")),
                (
                    "titulo_deuda",
                    models.BooleanField(help_text="Indica si es título de deuda"),
                ),
                (
                    "codigo_titulo",
                    models.CharField(help_text="Código del título", max_length=50),
                ),
                (
                    "comprobante",
                    models.FileField(
                        blank=True,
                        help_text="Adjunta el comprobante (PDF, imagen, etc.)",
                        null=True,
                        upload_to=operaciones.helpers.file_utils.comprobante_upload_path,
                    ),
                ),
                (
                    "solicitud",
                    models.ForeignKey(
                        blank=True,
                        help_text="Solicitud a la que pertenece este plazo fijo",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plazos_fijos",
                        to="operaciones.baserequestmodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Plazo Fijo",
                "verbose_name_plural": "Plazos Fijos",
                "db_table": "db_plazos_fijos_operacion",
            },
        ),
        migrations.CreateModel(
            name="VentaOperacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_operacion",
                    models.CharField(
                        choices=[
                            ("C", "Compra"),
                            ("V", "Venta"),
                            ("J", "Canje"),
                            ("P", "Plazo Fijo"),
                        ],
                        help_text="Tipo de operación a realizar",
                        max_length=1,
                    ),
                ),
                (
                    "fecha_movimiento",
                    models.DateField(help_text="Fecha de movimiento (DDMMYYYY)"),
                ),
                (
                    "fecha_liquidacion",
                    models.DateField(help_text="Fecha de liquidación (DDMMYYYY)"),
                ),
                (
                    "tipo_especie",
                    models.CharField(
                        choices=[
                            ("TP", "Títulos Públicos"),
                            ("ON", "Obligaciones Negociables"),
                            ("FC", "Fondos Comunes de Inversión"),
                            ("FF", "Fideicomisos Financieros"),
                            ("AC", "Acciones"),
                            ("OP", "Otras Inversiones"),
                        ],
                        help_text="Tipo de especie (2 caracteres)",
                        max_length=2,
                    ),
                ),
                (
                    "codigo_especie",
                    models.CharField(help_text="Código de la especie", max_length=20),
                ),
                (
                    "cant_especies",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Cantidad de especies (valor nominal): 14 enteros + 6 decimales para FCI, 14 enteros para otras inversiones",
                        max_digits=20,
                    ),
                ),
                (
                    "codigo_afectacion",
                    models.CharField(help_text="Código de afectación", max_length=3),
                ),
                (
                    "tipo_valuacion",
                    models.CharField(
                        choices=[("T", "Técnico"), ("V", "Mercado")],
                        help_text="Tipo de valuación (T -> Técnico | V -> Mercado)",
                        max_length=1,
                    ),
                ),
                (
                    "comprobante",
                    models.FileField(
                        blank=True,
                        help_text="Adjunta el comprobante (PDF, imagen, etc.)",
                        null=True,
                        upload_to=operaciones.helpers.file_utils.comprobante_upload_path,
                        validators=[
                            operaciones.helpers.file_utils.validate_comprobante_file
                        ],
                    ),
                ),
                (
                    "fecha_pase_vt",
                    models.DateField(
                        blank=True,
                        help_text="Fecha de pase a Valor Técnico (DDMMYYYY). Solo para TP y ON contabilizados a valor técnico",
                        null=True,
                    ),
                ),
                (
                    "precio_pase_vt",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Precio de pase a Valor Técnico. Solo para TP y ON contabilizados a valor técnico",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "precio_venta",
                    models.DecimalField(
                        decimal_places=2, help_text="Precio de venta", max_digits=6
                    ),
                ),
                (
                    "solicitud",
                    models.ForeignKey(
                        blank=True,
                        help_text="Solicitud a la que pertenece esta venta",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ventas",
                        to="operaciones.baserequestmodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Venta",
                "verbose_name_plural": "Ventas",
                "db_table": "db_ventas_operacion",
            },
        ),
    ]
